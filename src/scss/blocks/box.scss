@use '../mixins/hover.scss' as *;
@use '../mixins/pseudo.scss' as *;
@use '../mixins/responsive.scss' as *;

/*

MOVIMIENTO Y ESCALAS --> Translate, rotate y scale
MOSTRAR/OCULTAR --> Opacity

CSS triggers

Se puede animar todo lo que tenga valores numéricos MENOS z-index

.box-container {
  width: 300px;
  height: 300px;
  @include hover {
    .box {
      translate: 100px;
    }
  }
}

.box {
  width: 200px;
  height: 200px;
  translate: 0;
  background-color: orange;
  position: absolute;
  transition: translate 0.3s ease;
  /*&::after {
    @include pseudo {
      background-color: red;
      top: 200px;
      left: 200px;
    }
  }

  @include responsive(laptop) {
    width: 500px;
  }

   @media (hover:hover){
        &:hover{
            background-color: steelblue;
        }
    }
}

 ORDEN DE PROPIEDADES

- Position/ top / left/ ...
- Display
- Box-model (widht, height, border etc)
- Colores
- El resto 

*/

.container {
  display: grid;
  grid-template-columns: repeat(3, 200px);
  grid-template-rows: repeat((2, 200px));
  gap: 20px;
}

.box {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: orange;
  color: #333;
  font-size: 3rem;
}

.box-1 {
  grid-column: 2/4;
}

.box-2 {
  grid-row: 1/3;
}

/* 
grid y felx son modelos de layout, flex solo trabaja en una dimensión, mientras que grid trabja en dos. 

Grid en grande, flex en pequeño.

Grid ar montar el layout principal, el layout idividual de cada objeto en flex.

grid colum trabaj con la cantidad de línea del grid
*/
